/**
 * Script pour mettre √† jour toutes les activit√©s avec de vraies photos
 */

const updateAllImages = async () => {
  console.log('üñºÔ∏è D√©but de la mise √† jour de toutes les images...\n')
  
  try {
    // Mettre √† jour Amsterdam en premier (8 activit√©s)
    console.log('üìç Mise √† jour des activit√©s d\'Amsterdam...')
    const amsterdamResponse = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Amsterdam', 
        limit: 10 
      })
    })
    
    if (amsterdamResponse.ok) {
      const amsterdamData = await amsterdamResponse.json()
      console.log(`‚úÖ Amsterdam: ${amsterdamData.updated} images mises √† jour, ${amsterdamData.failed} √©checs`)
      
      amsterdamData.activities.forEach(activity => {
        if (activity.success) {
          console.log(`   ‚úì ${activity.name}`)
        } else {
          console.log(`   ‚ùå ${activity.name} - ${activity.error}`)
        }
      })
    } else {
      console.log('‚ùå Erreur pour Amsterdam:', await amsterdamResponse.text())
    }
    
    // Attendre un peu entre les villes
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    // Mettre √† jour Paris (9 activit√©s)
    console.log('\nüìç Mise √† jour des activit√©s de Paris...')
    const parisResponse = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Paris', 
        limit: 10 
      })
    })
    
    if (parisResponse.ok) {
      const parisData = await parisResponse.json()
      console.log(`‚úÖ Paris: ${parisData.updated} images mises √† jour, ${parisData.failed} √©checs`)
      
      parisData.activities.forEach(activity => {
        if (activity.success) {
          console.log(`   ‚úì ${activity.name}`)
        } else {
          console.log(`   ‚ùå ${activity.name} - ${activity.error}`)
        }
      })
    } else {
      console.log('‚ùå Erreur pour Paris:', await parisResponse.text())
    }
    
    // Attendre un peu entre les villes
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    // Mettre √† jour Londres (14 activit√©s - en deux fois)
    console.log('\nüìç Mise √† jour des activit√©s de Londres (partie 1)...')
    const londres1Response = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Londres', 
        limit: 8 
      })
    })
    
    if (londres1Response.ok) {
      const londres1Data = await londres1Response.json()
      console.log(`‚úÖ Londres (1/2): ${londres1Data.updated} images mises √† jour, ${londres1Data.failed} √©checs`)
      
      londres1Data.activities.forEach(activity => {
        if (activity.success) {
          console.log(`   ‚úì ${activity.name}`)
        } else {
          console.log(`   ‚ùå ${activity.name} - ${activity.error}`)
        }
      })
    } else {
      console.log('‚ùå Erreur pour Londres (1/2):', await londres1Response.text())
    }
    
    // Attendre un peu
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    console.log('\nüìç Mise √† jour des activit√©s de Londres (partie 2)...')
    const londres2Response = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Londres', 
        limit: 8 
      })
    })
    
    if (londres2Response.ok) {
      const londres2Data = await londres2Response.json()
      console.log(`‚úÖ Londres (2/2): ${londres2Data.updated} images mises √† jour, ${londres2Data.failed} √©checs`)
      
      londres2Data.activities.forEach(activity => {
        if (activity.success) {
          console.log(`   ‚úì ${activity.name}`)
        } else {
          console.log(`   ‚ùå ${activity.name} - ${activity.error}`)
        }
      })
    } else {
      console.log('‚ùå Erreur pour Londres (2/2):', await londres2Response.text())
    }
    
    // Mettre √† jour les autres villes
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    console.log('\nüìç Mise √† jour des activit√©s de Marseille...')
    const marseilleResponse = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Marseille', 
        limit: 6 
      })
    })
    
    if (marseilleResponse.ok) {
      const marseilleData = await marseilleResponse.json()
      console.log(`‚úÖ Marseille: ${marseilleData.updated} images mises √† jour, ${marseilleData.failed} √©checs`)
    } else {
      console.log('‚ùå Erreur pour Marseille:', await marseilleResponse.text())
    }
    
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    console.log('\nüìç Mise √† jour des activit√©s de Lyon...')
    const lyonResponse = await fetch('http://localhost:3000/api/update-activity-images', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        city: 'Lyon', 
        limit: 6 
      })
    })
    
    if (lyonResponse.ok) {
      const lyonData = await lyonResponse.json()
      console.log(`‚úÖ Lyon: ${lyonData.updated} images mises √† jour, ${lyonData.failed} √©checs`)
    } else {
      console.log('‚ùå Erreur pour Lyon:', await lyonResponse.text())
    }
    
    console.log('\nüéâ Mise √† jour termin√©e!')
    console.log('V√©rification des r√©sultats dans 5 secondes...')
    
    // V√©rifier les r√©sultats apr√®s 5 secondes
    setTimeout(async () => {
      console.log('\nüîç V√©rification des r√©sultats...')
      const { execSync } = require('child_process')
      try {
        execSync('node check-database.js', { stdio: 'inherit' })
      } catch (error) {
        console.log('‚ùå Erreur lors de la v√©rification:', error.message)
      }
    }, 5000)
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la mise √† jour:', error)
  }
}

// Ex√©cuter la mise √† jour
updateAllImages()